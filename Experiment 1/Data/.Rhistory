ezANOVA(indiv_df %>% filter(epoch==3|epoch==4|epoch==5),
dv = rt,
wid = sub_id,
within = .(d_setsize, display, epoch))
ezANOVA(indiv_df %>% filter(display == "old"),
dv = rt,
wid = sub_id,
within = .(epoch))
repeated_df <- clean_df %>%
filter(display=="old") %>%
rename(repeated = "rt") %>%
ungroup() %>%
select(-repeat., -display)
repeated_df <- clean_df %>%
filter(display=="old") %>%
rename(repeated = "rt") %>%
ungroup() %>%
select(-repeat., -display)
View(clean_df)
repeated_df <- clean_df %>%
group_by(d_setsize, display, epoch) %>%
filter(display=="old") %>%
rename(repeated = "rt") %>%
ungroup() %>%
select(-repeat., -display)
summary_df <- clean_df %>%
group_by(d_setsize, display, epoch) %>%
summarise(meanRT = mean(RT))
View(repeated_df)
View(summary_df)
repeated_df <- summary_df %>%
filter(display=="old") %>%
rename(repeated = "meanRT")
View(repeated_df)
repeated_df <- summary_df %>%
filter(display=="old") %>%
rename(repeated = "meanRT") %>%
ungroup() %>%
select(-display)
new_df <- indiv_df %>%
filter(display=="new") %>%
rename(repeated = "meanRT") %>%
ungroup() %>%
select(-display)
new_df <- summary_df %>%
filter(display=="new") %>%
rename(repeated = "meanRT") %>%
ungroup() %>%
select(-display)
cc_df <- merge(new_df, repeated_df) %>%
mutate(cc_effect = repeated-new)
class(new_df$new)
new_df <- summary_df %>%
filter(display=="new") %>%
rename(new = "meanRT") %>%
ungroup() %>%
select(-display)
cc_df <- merge(new_df, repeated_df) %>%
mutate(cc_effect = repeated-new)
ggplot(cc_df, aes(x=epoch, y=cc_effect, color=d_setsize)) +
geom_point()
ggplot(cc_df, aes(x=epoch, y=cc_effect, color=d_setsize)) +
geom_point() +
geom_line()
cc_df$d_setsize <- as.factor(cc_df$d_setsize)
ggplot(cc_df, aes(x=epoch, y=cc_effect, color=d_setsize)) +
geom_point() +
geom_line()
ggplot(cc_df, aes(x=epoch, y=-cc_effect, color=d_setsize)) +
geom_point() +
geom_line()
cc_df <- merge(new_df, repeated_df) %>%
mutate(cc_effect = new-repeated)
cc_df$d_setsize <- as.factor(cc_df$d_setsize)
ggplot(cc_df, aes(x=epoch, y=cc_effect, color=d_setsize)) +
geom_point() +
geom_line()
View(clean_df)
ezANOVA(indiv_df %>% filter(epoch==3|epoch==4|epoch==5),
dv = rt,
wid = sub_id,
within = .(d_setsize, display, epoch))
rm(list=ls())
setwd("D:/Box Sync/Projects/Functional Set Size/FSS/functional_setsize_efficient_search/Experiment 2/Data")
# for making ticks on axes
number_ticks <- function(n) {function(limits) pretty(limits, n)}
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE)
{
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
all_data <- read.csv("all.csv", header=TRUE)
all_data$rt <- as.numeric(as.character(all_data$rt))
accuracy_df <- all_data %>%
group_by(Subject.Number) %>%
summarise(accuracy = mean(hit))
bad_subs <- (accuracy_df %>%
filter(accuracy < .9))$Subject.Number
clean_df <- all_data %>% filter(hit == 1) %>%
filter(rt < 2000 , rt > 200) %>%
mutate(total_setsize = turtles + tortoises)
percent_removed = 1 - nrow(clean_df)/nrow(all_data)
n_subs <- nrow(clean_df %>%
group_by(Subject.Number) %>%
count(Subject.Number))
# collapse across tortoises
turtle_df <- clean_df %>%
group_by(turtles) %>%
summarise(meanRT = mean(rt), SD = sd(rt)/nrow(accuracy_df)) %>%
rename(ss = "turtles") %>%
mutate(type = "consistent")
# collapse across turtles
tortoise_df <- clean_df %>%
group_by(tortoises)%>%
summarise(meanRT = mean(rt), SD = sd(rt)/nrow(accuracy_df)) %>%
rename(ss = 'tortoises') %>%
mutate(type = "inconsistent")
t_v_t <- rbind(tortoise_df, turtle_df)
tortoises_vs_turtles <- rbind(tortoises_vs_turtles, tortoises_vs_turtles%>%filter(tortoises==0 & turtles==0) %>% mutate(type="tortoise"))
t_v_t <- rbind(tortoise_df, turtle_df)
ggplot(t_v_t, aes(x=ss, y = meanRT, color =type)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin=meanRT-SD, ymax=meanRT+SD), width=.5) +
# geom_line() +
stat_smooth(method="lm", formula=y~log(x+1), se=FALSE, linetype=1, size=1) +
scale_color_manual(values=c('#FF0000', '#0000cc'),
labels=c('Consistent region', 'Inconsistent region')) +
xlab("Distractor set size \n ") +
ylab("RT(ms)") +
scale_y_continuous(limits = c(650, 950),
breaks=seq(650, 950, 50),
labels = every_nth(seq(650, 950, 50), 1, inverse=TRUE)) +  labs(color="Distractor type") +
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position = "none")
ggplot(t_v_t, aes(x=ss, y = meanRT, color =type)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin=meanRT-SD, ymax=meanRT+SD), width=.5) +
# geom_line() +
stat_smooth(method="lm", formula=y~log(x+1), se=FALSE, linetype=1, size=1) +
scale_color_manual(values=c('#FF0000', '#0000cc'),
labels=c('Consistent region', 'Inconsistent region')) +
xlab("Distractor set size \n ") +
ylab("RT(ms)") +
scale_y_continuous(limits = c(650, 950),
breaks=seq(650, 950, 50),
labels = every_nth(seq(650, 950, 50), 1, inverse=TRUE)) +  labs(color="Distractor type") +
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
# theme(legend.position = "none")
theme(legend.text=element_text(size=16))
ggplot(t_v_t, aes(x=ss, y = meanRT, color =type)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin=meanRT-SD, ymax=meanRT+SD), width=.5) +
# geom_line() +
stat_smooth(method="lm", formula=y~log(x+1), se=FALSE, linetype=1, size=1) +
scale_color_manual(values=c('#FF0000', '#0000cc'),
labels=c('Consistent region', 'Inconsistent region')) +
xlab("Distractor set size \n ") +
ylab("RT(ms)") +
scale_y_continuous(limits = c(650, 950),
breaks=seq(650, 950, 50),
labels = every_nth(seq(650, 950, 50), 1, inverse=TRUE)) +  labs(color="Distractor type") +
theme(axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
# theme(legend.position = "none")
theme(legend.text=element_text(size=16))
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ez)
library(broom)
library(BayesFactor)
# for making ticks on axes
number_ticks <- function(n) {function(limits) pretty(limits, n)}
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE)
{
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
all_data <- read.csv("all.csv", header=TRUE)
all_data$RT <- as.numeric(as.character(all_data$RT))
accuracy_df <- all_data %>%
group_by(sub_id) %>%
summarise(accuracy = 1-mean(abs(Error)))
# after_removal <- all_data %>%
#   filter(sub_id != 26) %>%
#   filter(as.numeric(sub_id) <= 34)
#
# cleaner_df <- all_data %>%
#   filter(sub_id != 26) %>%
#   filter(as.numeric(sub_id) <= 34) %>%
#   filter(RT > 200 & RT < 1500)
#
# 100* (1 - (nrow(cleaner_df) / nrow(after_removal)))
# data missing for subject 11
# computer error for subject 26
# total subjects collected: 39, but pre-reg stated only 32 will be used
clean_df <- all_data %>% filter(Error == 0) %>%
filter(sub_id != 26) %>%
filter(as.numeric(sub_id) <= 34) %>%
filter(RT < 1500 , RT > 200) %>%
mutate(total_setsize = bird_setsize + fish_setsize)
setwd("D:/Box Sync/Projects/Functional Set Size/FSS/functional_setsize_efficient_search/Experiment 1/Data")
# for making ticks on axes
number_ticks <- function(n) {function(limits) pretty(limits, n)}
every_nth <- function(x, nth, empty = TRUE, inverse = FALSE)
{
if (!inverse) {
if(empty) {
x[1:nth == 1] <- ""
x
} else {
x[1:nth != 1]
}
} else {
if(empty) {
x[1:nth != 1] <- ""
x
} else {
x[1:nth == 1]
}
}
}
all_data <- read.csv("all.csv", header=TRUE)
all_data$RT <- as.numeric(as.character(all_data$RT))
accuracy_df <- all_data %>%
group_by(sub_id) %>%
summarise(accuracy = 1-mean(abs(Error)))
# after_removal <- all_data %>%
#   filter(sub_id != 26) %>%
#   filter(as.numeric(sub_id) <= 34)
#
# cleaner_df <- all_data %>%
#   filter(sub_id != 26) %>%
#   filter(as.numeric(sub_id) <= 34) %>%
#   filter(RT > 200 & RT < 1500)
#
# 100* (1 - (nrow(cleaner_df) / nrow(after_removal)))
# data missing for subject 11
# computer error for subject 26
# total subjects collected: 39, but pre-reg stated only 32 will be used
clean_df <- all_data %>% filter(Error == 0) %>%
filter(sub_id != 26) %>%
filter(as.numeric(sub_id) <= 34) %>%
filter(RT < 1500 , RT > 200) %>%
mutate(total_setsize = bird_setsize + fish_setsize)
#### analysis by tloc
tloc_df <- clean_df %>%
group_by(tloc) %>%
summarise(RT = mean(RT)) %>%
mutate(x=if_else(tloc%%10 == 0, 10, tloc%%10),
y=floor(-tloc/10.1)) %>%
mutate(roundedRT = round(RT))
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "#E9AB17", high = "green",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "#FF0000", high = "green",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "#green", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "green", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "dark green", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "blue", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "red", high = "blue",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "blue", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "dark red", high = "yellow",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "yellow", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "orange", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "red", high = "green",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "dark green", high = "green",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "dark green", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "green", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "#00a553", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw() +
theme(legend.position="none")
ggplot(tloc_df, aes(x=x, y=y, size=RT, color=RT)) +
geom_point() +
geom_text(aes(label=roundedRT), hjust=0.5, vjust=2, size=4) +
coord_cartesian(y = c(-10.5, -6.5), x = c(0.5, 10.5)) +
scale_colour_gradient(low = "#00a553", high = "red",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "colour") +
theme(axis.text.x = element_text(size=13),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14)) +
theme_bw()
