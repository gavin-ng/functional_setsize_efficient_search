View(ok)
ok <- data_frame(birth1, birth2) %>%
mutate(yes = birth1==0 & birth2 == 1)
sum(ok$yes)
abline(v=39, col='blue')
sum(birth2)
sum(birth1)
dens(sample.mu)
---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
```{r}
plot(cars)
```
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike *Knit*, *Preview* does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.
```{r}
library(rethinking)
library(tidyverse)
```
```{r}
data(Howell1)
d <- Howell1
d2 <- d %>% filter(age>=18)
dens(d2$height)
```
## Priors
Prior for means
```{r}
curve( dnorm(x, 178, 20), from=100, to=250)
curve( dunif(x, 0, 50), from=10, to=60)
```
```{r}
sample_mu <- rnorm(1e4, 178, 20)
sample_sigma <- runif(1e4, 0, 50)
prior_h <- rnorm(1e4, sample_mu, sample_sigma)
dens(prior_h)
```
```{r}
mu.list <- seq( from=140, to=160 , length.out=200 )
sigma.list <- seq( from=4 , to=9 , length.out=200 )
post <- expand.grid( mu=mu.list , sigma=sigma.list )
post$LL <- sapply( 1:nrow(post) , function(i) sum( dnorm(
d2$height ,
mean=post$mu[i] ,
sd=post$sigma[i] ,
log=TRUE ) ) )
post$prod <- post$LL + dnorm( post$mu , 178 , 20 , TRUE ) +
dunif( post$sigma , 0 , 50 , TRUE )
post$prob <- exp( post$prod - max(post$prod) )
contour_xyz( post$mu , post$sigma , post$prob )
image_xyz( post$mu , post$sigma , post$prob )
```
Sampling from the posterior
```{r}
sample.rows <- sample(1:nrow(post), size=1e4, replace=TRUE, prob=post$prob)
sample.mu <- post$mu[sample.rows]
sample.sigma <- post$sigma[sample.rows]
plot(sample.mu, sample.sigma, cex=0.5, pch=16, col=col.alpha(rangi2,0.1))
```
```{r}
dens(sample.mu)
dens(sample.sigma)
```
data(Howell1)
d <- Howell1
d2 <- d %>% filter(age>=18)
dens(d2$height)
curve( dnorm(x, 178, 20), from=100, to=250)
curve( dunif(x, 0, 50), from=10, to=60)
sample_mu <- rnorm(1e4, 178, 20)
sample_sigma <- runif(1e4, 0, 50)
prior_h <- rnorm(1e4, sample_mu, sample_sigma)
dens(prior_h)
mu.list <- seq( from=140, to=160 , length.out=200 )
sigma.list <- seq( from=4 , to=9 , length.out=200 )
post <- expand.grid( mu=mu.list , sigma=sigma.list )
post$LL <- sapply( 1:nrow(post) , function(i) sum( dnorm(
d2$height ,
mean=post$mu[i] ,
sd=post$sigma[i] ,
log=TRUE ) ) )
post$prod <- post$LL + dnorm( post$mu , 178 , 20 , TRUE ) +
dunif( post$sigma , 0 , 50 , TRUE )
post$prob <- exp( post$prod - max(post$prod) )
contour_xyz( post$mu , post$sigma , post$prob )
image_xyz( post$mu , post$sigma , post$prob )
sample.rows <- sample(1:nrow(post), size=1e4, replace=TRUE, prob=post$prob)
sample.mu <- post$mu[sample.rows]
sample.sigma <- post$sigma[sample.rows]
plot(sample.mu, sample.sigma, cex=0.5, pch=16, col=col.alpha(rangi2,0.1))
dens(sample.mu)
dens(sample.sigma)
HPDI(sample.mu)
HPDI(sample.sigma)
mu_prior = rnorm(1e4, 0, 10)
sigma_prior = runif(1e4, 0, 10)
mu_prior <- rnorm(1e4, 0, 10)
sigma_prior <- runif(1e4, 0, 10)
prior_h <- rnorm(1e4, mu_prior, sigma_prior)
dens(pior_h)
mu_prior <- rnorm(1e4, 0, 10)
sigma_prior <- runif(1e4, 0, 10)
prior_h <- rnorm(1e4, mu_prior, sigma_prior)
dens(prior_h)
mu_prior <- rnorm(1e4, 0, 10)
sigma_prior <- runif(1e4, 0, 10)
sim_h <- rnorm(1e4, mu_prior, sigma_prior)
dens(sim_h)
flist <- alist(
height ~ dnorm(mu_prior, sigma_prior),
mu ~ dnorm(10, 0),
sigma ~ dunif(10,0)
)
d2 <- d[d$age >= 18]
d <- Howell1
d2 <- d[d$age >= 18]
d2 <- d[d$age >= 18, ]
model_4h1 <- map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(156, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
library(rethinking)
library(tidyverse)
d <- Howell1
d2 <- d[d$age >= 18, ]
model_4h1 <- map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(156, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
d <- Howell1
d2 <- d[ d$age >= 18 , ]
model_4h1 <- map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(156, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
data(Howell1)
data(Howell1)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
model_4h1 <- map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(156, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
data(Howell1)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
model_4h1 <- rethinking:map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(156, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
library(rethinking)
data(Howell1)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
model_4h1 <- rethinking::map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(156, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
post <- extract.samples(model_4h1)
post[1:5]
post[1:5,]
mu1 <- post$a + post$b + 49.65
HPDI(mu1, prob=.89)
HPDI(mu1, prob=.9)
mean(mu1)
model_4h1 <- rethinking::map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(100, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
post <- extract.samples(model_4h1)
mu1 <- post$a + post$b + 49.65
HPDI(mu1, prob=.9)
mean(mu1)
data(Howell1)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
model_4h1 <- rethinking::map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(100, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
post <- extract.samples(model_4h1)
mu1 <- post$a + post$b + 49.65
mean(mu1)
HPDI(mu1, prob=.9)
mu1 <- post$a + post$b + 46.95
mean(mu1)
y <- rnorm(1e5, post$a + post$b*46.95, post$sigma)
mean(y)
HPDI(y, prob=.9)
data(Howell1)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
model_4h1 <- rethinking::map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(100, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
post <- extract.samples(model_4h1)
mu1 <- post$a + post$b + 46.95
mean(mu1)
HPDI(mu1, prob=.9)
y <- rnorm(1e5, post$a + post$b*46.95, post$sigma)
mean(y)
HPDI(y, prob=.9)
mu1 <- post$a + post$b + 54,63
mu1 <- post$a + post$b + 54.63
data(Howell1)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
model_4h1 <- rethinking::map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(100, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
post <- extract.samples(model_4h1)
mu1 <- post$a + post$b + 54.63
mean(mu1)
HPDI(mu1, prob=.9)
y <- rnorm(1e5, post$a + post$b*54.63, post$sigma)
mean(y)
HPDI(y, prob=.9)
d3 <- d %>% filter(age<=18)
d3 <- d %>% filter(age<18)
model_4h2 <- rethinking::map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(100, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d2
)
post2 <- extract_samples(model_4h2)
post2 <- extract.samples(model_4h2)
mu.link <- function(weight) post$a + post$b*weight
weight.seq <- sapply(weight.seq, mu.link)
mu.link <- function(weight) post$a + post$b*weight
weight.seq <- seq(from=25, to=70, by=1)
mu <- sapply(weight.seq, mu.link)
mu.mean <- apply(mu, 2, mean)
mu.HPDI <- apply(mu, 2, HPDI, prob=.9)
precis(model_4h2)
model_4h2 <- rethinking::map(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(100, 100),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 50)
),
data=d3
)
precis(model_4h2)
install.packages("brms")
setwd("C:/Users/Gavin/Downloads/Fish Data/Data")
library(tidyverse)
library(ggplot2)
library(ez)
library(TOSTER)
all_data <- read.csv("all.csv", header=TRUE)
all_data$RT <- as.numeric(as.character(all_data$RT))
clean_df <- all_data %>% filter(Error == 0) %>%
filter(sub_id >2)
clean_df$log_bird_setsize <- log(clean_df$bird_setsize+1)
clean_df$log_fish_setsize <- log(clean_df$fish_setsize+1)
clean_df$fish_setsize <- as.factor(clean_df$fish_setsize)
clean_df$bird_setsize <- as.factor(clean_df$bird_setsize)
summary_df <- clean_df %>%
group_by(fish_setsize, bird_setsize) %>%
summarise(meanRT = mean(RT), SD = sd(RT))
summary_df$fish_setsize <- as.factor(summary_df$fish_setsize)
cleaner_df <- clean_df %>%
filter(rt > 200 & rt < 2000)
View(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 2000)
cleaner_df/clean_df
nrow(cleaner_df)/nrow(clean_df)
clean_df <- clean_df %>%
filter(RT > 200 & RT < 2000)
clean_df$log_bird_setsize <- log(clean_df$bird_setsize+1)
clean_df$log_fish_setsize <- log(clean_df$fish_setsize+1)
clean_df$fish_setsize <- as.factor(clean_df$fish_setsize)
clean_df$bird_setsize <- as.factor(clean_df$bird_setsize)
summary_df <- clean_df %>%
group_by(fish_setsize, bird_setsize) %>%
summarise(meanRT = mean(RT), SD = sd(RT))
summary_df$fish_setsize <- as.factor(summary_df$fish_setsize)
ggplot(summary_df, aes(x=bird_setsize, y=meanRT, color=fish_setsize)) +
geom_point(size = 3) +
geom_line() +
# stat_smooth(method="lm", formula=y~log(x), se=FALSE, linetype=1, size=1) +
# scale_color_manual(values=c('#000000', '#00007f', '#0000e5', "#b2b2ff"))
scale_color_manual(values=c('#b2b2ff', '#0000e5', '#00007f', "#000000"))
individual_df <- clean_df %>%
group_by(sub_id, fish_setsize, bird_setsize) %>%
summarise(RT = mean(RT))
individual_df$bird_setsize <- as.factor(individual_df$bird_setsize)
individual_df$fish_setsize <- as.factor(individual_df$fish_setsize)
individual_df$sub_id <- as.factor(individual_df$sub_id)
ezANOVA(individual_df,
RT,
within=c(fish_setsize, bird_setsize),
wid = sub_id
)
View(clean_df)
clean_df <- all_data %>% filter(Error == 0) %>%
filter(sub_id >2)
View(clean_df)
removed_trials <- (nrows(clean_df) - nrows(cleaner_df)) / nrows(clean_df)
clean_df <- all_data %>% filter(Error == 0) %>%
filter(sub_id >2)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 2000)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1800)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 2000)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
View(cleaner_df)
clean_df <- all_data %>% filter(Error == 0) %>%
filter(sub_id >2) %>%
mutate(total_setsize = bird_setsize + fish_setsize)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000) %>%
group_by(total_setsize)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000) %>%
group_by(total_setsize) %>%
tally(RT)
View(cleaner_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000) %>%
group_by(total_setsize) %>%
count(RT)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000) %>%
# group_by(total_setsize) %>%
count(RT)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000) %>%
group_by(total_setsize) %>%
count(RT)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000) %>%
# group_by(total_setsize) %>%
count(total_setsize)
View(cleaner_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 2000) %>%
# group_by(total_setsize) %>%
count(total_setsize)
View(cleaner_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 2000) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize)
View(cleaner_df)
aa <- all_data %>% filter(sib_id>2) %>%
count(bird_setsize, fish_setsize)
aa <- all_data %>% filter(sub_id>2) %>%
count(bird_setsize, fish_setsize)
View(aa)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 2000) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize)
View(cleaner_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1800) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize)
View(cleaner_df)
718/765
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize)
View(cleaner_df)
749/765
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
# count(bird_setsize, fish_setsize)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
# count(bird_setsize, fish_setsize)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
# count(bird_setsize, fish_setsize)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1800)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1000)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize)
View(cleaner_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500)
removed_trials <- (nrow(clean_df) - nrow(cleaner_df)) / nrow(clean_df)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize)
View(cleaner_df)
View(aa)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize) %>%
mutate(a = n/765)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 1500) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize) %>%
mutate(a = 1- n/765)
cleaner_df <- clean_df %>%
filter(RT > 200 & RT < 2000) %>%
# group_by(total_setsize) %>%
count(bird_setsize, fish_setsize) %>%
mutate(a = 1- n/765)
